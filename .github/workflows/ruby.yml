# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Rails tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_USER: colorpixels
          POSTGRES_PASSWORD: colorpixelspass
          POSTGRES_DB: colorpixels_rails_test
        ports:
          - 5435:5432
    strategy:
      matrix:
        ruby-version: ['2.7.2']

    steps:
    # setup
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 14.15.5
    # Cache
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    # node / webpacker
    - name: Install dependencies
      run: yarn install
    - name: webpacker_compile
      run: NODE_ENV=test bundle exec rails webpacker:compile
    # run tests
    - name: Run tests
      run: bundle exec rake

